{{ 'section-collections-slider.css' | asset_url | stylesheet_tag }}
<script src="{{ 'collections-slider.js' | asset_url }}" defer="defer"></script>
{%- liquid
  assign autoplay = 0
  if section.settings.autoplay
    assign autoplay = section.settings.autoplay_delay | times: 1000
  endif

  assign collections_medias_html = ''
  assign collections_info_html = ''
  assign collections_heading_html = ''
-%}
{%- capture image_sizes -%}
(max-width: 767px) calc(100vw - 3rem), (max-width: 1023px) calc((100vw - 3rem) / 2), calc(min(100vw, {{ settings.page_width }}px) / 2)
{%- endcapture -%}
{%- for block in section.blocks -%}
  {%- liquid
    assign collection = collections[block.settings.collection]

    if collection == blank
      assign collection_name = 'onboarding.collection_title' | t
      assign product_count = 12
    else
      assign collection_name = collection.title
      assign product_count = collection.all_products_count
    endif

    if block.settings.title != blank
      assign collection_name = block.settings.title
    endif

    assign featured_image = block.settings.image
    if featured_image == blank and collection != blank
      if collection.image
        assign featured_image = collection.image
      else
        assign featured_image = collection.products.first.featured_media.preview_image
      endif
    endif

    assign image_ratio = section.settings.image_ratio
    if image_ratio == 'adapt'
      if featured_image != blank
        assign image_ratio = featured_image.aspect_ratio
      else
        assign image_ratio = '1'
      endif
    endif

    assign alt = featured_image.alt | default: shop.name | escape
    assign loading = 'lazy'
    assign fetchpriority = 'low'
    if section.index < 2
      assign loading = 'eager'
      assign fetchpriority = 'high'
    endif

    assign animate_delay = 250

    assign filter_value = forloop.index0
  -%}
  {%- capture collection_media_html -%}
  <div class="swiper-slide" data-filter="{{ filter_value }}">
    <div class="collection-media media-wrapper relative w-full h-full{% if section.settings.use_color_scheme_in_container == false %} blocks-radius{% endif %}">
      <motion-element class="block w-full h-full" data-motion="zoom-out" style="--aspect-ratio: {{ image_ratio }};">
        {%- if featured_image != blank -%}
          {{
            featured_image
            | image_url: width: featured_image.width
            | image_tag:
              loading: loading,
              fetchpriority: fetchpriority,
              is: 'image-lazy',
              sizes: image_sizes,
              widths: '375, 460, 550, 705, 750, 920, 1100, 1410, 1500, 1620, 1720',
              alt: alt
          }}
        {%- else -%}
          {% capture current %}{% cycle 1, 2, 3 %}{% endcapture %}
          {{ 'collection-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}
        {%- endif -%}
      </motion-element>
    </div>
  </div>
  {%- for i in (2..5) -%}
    {%- liquid
      assign block_image_key = 'image_' | append: i
      assign block_image = block.settings[block_image_key]
      if block_image == blank
        continue
      endif
    -%}
    <div class="swiper-slide" data-filter="{{ filter_value }}">
      <div class="collection-media media-wrapper relative w-full h-full{% if section.settings.use_color_scheme_in_container == false %} blocks-radius{% endif %}">
        <motion-element class="block w-full h-full" data-motion="zoom-out" style="--aspect-ratio: {{ image_ratio }};">
        {{
          block_image
          | image_url: width: block_image.width
          | image_tag:
            loading: loading,
            fetchpriority: fetchpriority,
            is: 'image-lazy',
            sizes: image_sizes,
            widths: '375, 460, 550, 705, 750, 920, 1100, 1410, 1500, 1620, 1720',
            alt: alt
        }}
        </motion-element>
      </div>
    </div>
  {%- endfor -%}
  {%- endcapture -%}
  {%- assign collections_medias_html = collections_medias_html | append: collection_media_html -%}

  {%- capture collection_info_html -%}
  <div
    class="collection-media__info pointer-events-none z-1 gap-3 content-overlay content-overlay--top-center text-center !hidden"
    data-filter="{{ filter_value }}"
  >
    <motion-element
      data-motion="fade-up"
      data-motion-delay="{{ animate_delay }}"
      data-text
      hold
      class="block"
    >
      <h3 class="collection-media__title text-upper {{ block.settings.title_size }}">
        {{ collection_name }}
      </h3>
    </motion-element>
    {%- if block.settings.description != blank -%}
      {%- assign animate_delay = animate_delay | plus: 100 -%}
      <motion-element
        data-motion="fade-up"
        data-motion-delay="{{ animate_delay }}"
        data-text
        hold
        class="block"
      >
        <div class="collection-media__desc rte {{ block.settings.text_size }}">
          {{ block.settings.description }}
        </div>
      </motion-element>
    {%- endif -%}
  </div>
  {%- endcapture -%}
  {%- assign collections_info_html = collections_info_html | append: collection_info_html -%}

  {%- capture collection_heading_html -%}
  <div
    class="text-hovering {{ block.settings.title_size }}{% if forloop.first %} is-active{% endif %}"
    data-id="{{ block.id }}-{{ forloop.index }}"
    data-index="{{ forloop.index0 }}"
    {{ block.shopify_attributes }}
  >
    <a
      href="{{ collection.url | default: '#' }}"
      class="reversed-link focus-inset"
    >
      {{- collection_name -}}
    </a>
    {%- if section.settings.show_product_count -%}
      {%- liquid
        if product_count > 0 and product_count < 10
          assign product_count = '0' | append: product_count
        endif
      -%}
      <span class="collection-card__count text-lg shrink-0">
        {{- product_count -}}
      </span>
    {%- endif -%}
  </div>
  {%- endcapture -%}
  {%- assign collections_heading_html = collections_heading_html | append: collection_heading_html -%}
{%- endfor -%}
{% render 'divider',
  show_divider: section.settings.show_section_divider,
  divider_width: section.settings.divider_width
%}
<div
  class="section section-{{ section.id }} section--padding section--collections-slider page-width{% unless section.settings.use_color_scheme_in_container %} color-{{ section.settings.color_scheme }}{% endunless %} collections-slider-position-{{ section.settings.position }}"
  style="--section-padding-top: {{ section.settings.padding_top }}px; --section-padding-bottom: {{ section.settings.padding_bottom }}px;"
  data-id="{{ section.id }}"
>
  <collections-slider
    class="collections-slider flex{% if section.settings.slider_position == 'right' %} md:flex-row-reverse{% endif %} flex-wrap blocks-radius{% if section.settings.use_color_scheme_in_container %} color-{{ section.settings.color_scheme }} blocks-radius mask-none{% endif %}"
    {% if autoplay > 0 %}
      data-autoplay="{{ autoplay }}"
      style="--swiper-autoplay-delay: {{ autoplay | plus: 1000 }}ms;"
    {% endif %}
  >
    <div class="collections-slider__media relative w-full md:w-1/2 color-{{ section.settings.slider_color_scheme }}">
      <div class="swiper h-full">
        <div class="swiper-wrapper h-full">
          {{ collections_medias_html }}
        </div>
      </div>
      {{ collections_info_html }}
      <div class="swiper-pagination swiper-pagination-bullets-animate"></div>
    </div>
    <div class="collections-slider__content w-full md:w-1/2 flex justify-center">
      <div class="collections-slider__content-inner w-full">
        {% render 'section-heading', section_settings: section.settings, header_alignment: 'left' %}
        <div class="collection-cta relative flex flex-col gap-5">
          {{ collections_heading_html }}
        </div>
      </div>
    </div>
  </collections-slider>
</div>
{% schema %}
{
  "name": "t:sections.collections-slider.name",
  "disabled_on": {
    "groups": ["footer", "header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.general.name"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "use_color_scheme_in_container",
      "label": "t:sections.all.use_color_scheme_in_container.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_product_count",
      "label": "t:settings_schema.collection_cards.settings.product_count.label",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.all.section_header.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.all.heading.label",
      "default": "Collections slider"
    },
    {
      "type": "select",
      "id": "heading_size",
      "label": "t:sections.all.text_size.heading.label",
      "default": "hd3",
      "options": [
        {
          "value": "h6",
          "label": "t:sections.all.text_size.options__h6.label"
        },
        {
          "value": "h5",
          "label": "t:sections.all.text_size.options__h5.label"
        },
        {
          "value": "h4",
          "label": "t:sections.all.text_size.options__h4.label"
        },
        {
          "value": "h3",
          "label": "t:sections.all.text_size.options__h3.label"
        },
        {
          "value": "h2",
          "label": "t:sections.all.text_size.options__h2.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.text_size.options__h1.label"
        },
        {
          "value": "hd3",
          "label": "t:sections.all.text_size.options__hd3.label"
        },
        {
          "value": "hd2",
          "label": "t:sections.all.text_size.options__hd2.label"
        },
        {
          "value": "hd1",
          "label": "t:sections.all.text_size.options__hd1.label"
        }
      ]
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.all.subheading.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.header__slider_settings.content"
    },
    {
      "type": "color_scheme",
      "id": "slider_color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "label": "t:settings_schema.global.settings.image_ratio.label",
      "default": "adapt",
      "options": [
        {
          "value": "adapt",
          "label": "t:settings_schema.global.settings.image_ratio.options__1.label"
        },
        {
          "value": "1/1",
          "label": "t:settings_schema.global.settings.image_ratio.options__2.label"
        },
        {
          "value": "3/4",
          "label": "t:settings_schema.global.settings.image_ratio.options__3.label"
        },
        {
          "value": "4/3",
          "label": "t:settings_schema.global.settings.image_ratio.options__4.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "slider_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.all.slider_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.all.slider_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.all.slider_position.label"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "t:sections.all.carousel.autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "label": "t:sections.all.carousel.autoplay_delay",
      "max": 10,
      "min": 2,
      "step": 1,
      "unit": "s",
      "default": 3
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 50
    },
    {
      "type": "header",
      "content": "t:sections.all.divider.content"
    },
    {
      "type": "checkbox",
      "id": "show_section_divider",
      "default": false,
      "label": "t:sections.all.divider.settings.show_divider.label"
    },
    {
      "type": "select",
      "id": "divider_width",
      "options": [
        {
          "value": "fixed",
          "label": "t:sections.all.container.options__fixed.label"
        },
        {
          "value": "full",
          "label": "t:sections.all.container.options__full.label"
        }
      ],
      "default": "fixed",
      "label": "t:sections.all.divider.settings.divider_width.label"
    }
  ],
  "max_blocks": 5,
  "blocks": [
    {
      "type": "collection",
      "name": "t:sections.all.collection.label",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "t:sections.all.collection.label"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.all.image.label"
        },
        {
          "type": "text",
          "id": "title",
          "label": "t:sections.all.collection.title.label",
          "info": "t:sections.all.collection.title.info"
        },
        {
          "type": "select",
          "id": "title_size",
          "label": "t:sections.all.text_size.title.label",
          "default": "hd2",
          "options": [
            {
              "value": "h6",
              "label": "t:sections.all.text_size.options__h6.label"
            },
            {
              "value": "h5",
              "label": "t:sections.all.text_size.options__h5.label"
            },
            {
              "value": "h4",
              "label": "t:sections.all.text_size.options__h4.label"
            },
            {
              "value": "h3",
              "label": "t:sections.all.text_size.options__h3.label"
            },
            {
              "value": "h2",
              "label": "t:sections.all.text_size.options__h2.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.text_size.options__h1.label"
            },
            {
              "value": "hd3",
              "label": "t:sections.all.text_size.options__hd3.label"
            },
            {
              "value": "hd2",
              "label": "t:sections.all.text_size.options__hd2.label"
            },
            {
              "value": "hd1",
              "label": "t:sections.all.text_size.options__hd1.label"
            }
          ]
        },
        {
          "type": "richtext",
          "id": "description",
          "label": "t:sections.all.description.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "label": "t:sections.all.text_size.text.label",
          "default": "text-base",
          "options": [
            {
              "value": "text-sm",
              "label": "t:sections.all.text_size.options__small.label"
            },
            {
              "value": "text-base",
              "label": "t:sections.all.text_size.options__base.label"
            },
            {
              "value": "text-lg",
              "label": "t:sections.all.text_size.options__large.label"
            }
          ]
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "t:sections.all.second_image.label"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "t:sections.all.third_image.label"
        },
        {
          "type": "image_picker",
          "id": "image_4",
          "label": "t:sections.all.fourth_image.label"
        },
        {
          "type": "image_picker",
          "id": "image_5",
          "label": "t:sections.all.fifth_image.label"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.collections-slider.name",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}
