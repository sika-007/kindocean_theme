{%- liquid
  assign collection = collections[section.settings.collection]
  assign products_to_display = section.settings.limit
  if collection != blank and collection.all_products_count < products_to_display
    assign products_to_display = collection.all_products_count
  endif

  assign header_layout = section.settings.header_layout
  assign show_all_button_on_top = section.settings.show_all_button_on_top
  assign button_style = section.settings.button_style
  assign button_label = section.settings.button_label
  assign button_link = collection.url

  assign description = section.settings.description
  if section.settings.show_collection_description
    assign description = collection.description
  endif

  assign columns = section.settings.columns

  assign columns_tablet = columns | minus: 1
  if columns < 3 or request.design_mode
    assign columns_tablet = columns
  endif

  assign columns_mobile = section.settings.columns_mobile | plus: 0

  assign enable_swipe_mobile = false
  if section.settings.swipe_on_mobile and products_to_display > columns_mobile
    assign enable_swipe_mobile = true
  endif

  assign item_css_class = 'f-column'

  assign enable_slider = false
  if section.settings.enable_slider and products_to_display > columns
    assign enable_slider = true
    assign item_css_class = item_css_class | append: ' swiper-slide'
  endif

  assign grid_layout = section.settings.grid_layout
  assign is_metro = false
  if grid_layout == 'metro' and columns > 2 and enable_slider == false
    assign is_metro = true
    if columns == 3
      assign metro_columns = 10
    else
      assign metro_columns = columns | minus: 1 | times: 2
    endif
  endif
-%}
{%- capture image_sizes -%}
(max-width: 767px) calc((100vw - 30px) / {{ columns_mobile }}),
(max-width: 1023px) calc((100vw - 30px) / {{ columns_tablet }}),
{{ settings.page_width | divided_by: columns }}px
{%- endcapture -%}
{{ 'section-featured-collection.css' | asset_url | stylesheet_tag }}

{% render 'divider',
  show_divider: section.settings.show_section_divider,
  divider_width: section.settings.divider_width
%}

<div
  class="section section-{{ section.id }}{% if enable_slider %} slider-enabled{% endif %} section--featured-collection section-header-{{ header_layout }} section--padding page-width color-{{ section.settings.color_scheme }}"
  style="--section-padding-top: {{ section.settings.padding_top }}px;--section-padding-bottom: {{ section.settings.padding_bottom }}px;"
  data-id="{{ section.id }}"
>
  <div class="section__wrapper">
    <div class="section__header-wrap flex lg:flex-col justify-between">
      {% render 'section-heading',
        section_settings: section.settings,
        description: description,
        description_size: section.settings.text_size,
        button_visible: show_all_button_on_top,
        button_link: button_link,
        button_style: button_style,
        button_label: button_label,
        custom_css_class: 'flex-grow'
      %}
      {%- if enable_slider and header_layout == 'standing-column' -%}
        <div class="swiper-controls hidden md:flex items-center justify-start gap-2">
          <button
            class="swiper-button-prev"
            name="previous"
            aria-label="{{ 'general.slider.previous_slide' | t }}"
          >
            {% render 'icon-slider-prev' %}
          </button>
          <button
            class="swiper-button-next"
            name="next"
            aria-label="{{ 'general.slider.next_slide' | t }}"
          >
            {% render 'icon-slider-next' %}
          </button>
        </div>
      {%- endif -%}
    </div>
    <div class="section__content">
      <grid-list class="block">
        <featured-collection
          class="block{% if enable_slider %} swiper f-grid--gap-{{ section.settings.column_gap }}{% endif %}{% if enable_swipe_mobile %} swipe-mobile swipe-mobile--{{ section.settings.columns_mobile }}-cols{% endif %}"
          data-section-id="{{ section.id }}"
          {% if enable_slider %}
            data-enable-slider="true"
            data-items="{{ columns }}"
            data-tablet-items="{{ columns_tablet }}"
            {% if header_layout == 'standing-column' %}
              data-calc-heading-column-height="true"
            {%- else -%}
              data-calc-button-position="true"
            {% endif %}
          {% endif %}
        >
          <div class="featured-collection__items f-grid f-grid-{{ columns_mobile }}-cols md:f-grid-{{ columns_tablet }}-cols lg:f-grid-{{ columns }}-cols f-grid--gap-{{ section.settings.column_gap }} f-grid--row-gap-{{ section.settings.row_gap }}{% if enable_slider %} swiper-wrapper{% endif %}{% if enable_swipe_mobile %} swipe-mobile__inner{% endif %}">
            {%- for product in collection.products limit: products_to_display -%}
              {%- liquid
                # Detect metro item
                assign current_image_sizes = image_sizes
                assign is_metro_item = false
                assign custom_class = item_css_class
                if is_metro
                  assign position_in_group = forloop.index0 | modulo: metro_columns

                  if columns == 3
                    assign metro_index = metro_columns | minus: 4
                  else
                    assign metro_index = metro_columns | minus: 1
                  endif

                  assign modulo_2 = position_in_group | modulo: metro_index

                  if position_in_group == 0 or modulo_2 == 0
                    assign is_metro_item = true
                    assign custom_class = ' is-metro-item'
                  endif
                endif
              -%}
              {%- if is_metro_item -%}
                {%- capture current_image_sizes -%}
                (max-width: 767px) calc(100vw - 30px),
                (max-width: 1023px) calc(((100vw - 30px) / {{ columns_tablet }}) * 2),
                {{ settings.page_width | divided_by: columns | times: 2 }}px
                {%- endcapture -%}
              {%- endif -%}
              <div class="{{ custom_class }}">
                {% render 'card-product',
                  product: product,
                  use_landscape_image: is_metro_item,
                  image_sizes: current_image_sizes,
                  image_ratio: section.settings.pcard_image_ratio,
                  section_index: section.index,
                  index: forloop.index
                %}
              </div>
            {%- else -%}
              {%- for i in (1..products_to_display) -%}
                {%- liquid
                  # Detect metro item
                  assign is_metro_item = false
                  assign custom_class = item_css_class
                  if is_metro
                    assign modulo = forloop.index0 | modulo: metro_columns
                    assign modulo_2 = forloop.index | modulo: metro_columns
                    if modulo == 0 or modulo_2 == 0
                      assign is_metro_item = true
                      assign custom_class = ' is-metro-item'
                    endif
                  endif
                -%}
                <div class="{{ custom_class }}">
                  {% render 'card-product-placeholder', image_ratio: section.settings.pcard_image_ratio %}
                </div>
              {%- endfor -%}
            {%- endfor -%}
          </div>
          {%- if enable_slider and header_layout != 'standing-column' -%}
            <div class="swiper-controls hidden md:block">
              <button
                class="swiper-button-prev"
                name="previous"
                aria-label="{{ 'general.slider.previous_slide' | t }}"
              >
                {% render 'icon-slider-prev' %}
              </button>
              <button
                class="swiper-button-next"
                name="next"
                aria-label="{{ 'general.slider.next_slide' | t }}"
              >
                {% render 'icon-slider-next' %}
              </button>
            </div>
          {%- endif -%}
        </featured-collection>
      </grid-list>
    </div>
  </div>
  {%- if button_label != blank and show_all_button_on_top != true -%}
    <div class="section__footer flex items-center justify-center">
      <a
        class="btn {{ button_style }}"
        {% if button_link != blank %}
          href="{{ button_link }}"
        {% else %}
          aria-disabled="true"
        {% endif %}
      >
        {{- button_label -}}
      </a>
    </div>
  {%- endif -%}
</div>
<script src="{{ 'featured-collection.js' | asset_url }}" defer="defer"></script>
{% schema %}
{
  "name": "t:sections.featured-collection.name",
  "disabled_on": {
    "groups": ["header", "footer", "custom.overlay"]
  },
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.general.name"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.section_header.content"
    },
    {
      "type": "select",
      "id": "header_layout",
      "label": "t:sections.all.layout.label",
      "options": [
        {
          "value": "vertical",
          "label": "t:sections.all.layout.options__1.label"
        },
        {
          "value": "horizontal",
          "label": "t:sections.all.layout.options__2.label"
        },
        {
          "value": "standing-column",
          "label": "t:sections.all.layout.options__3.label"
        }
      ],
      "default": "vertical"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "t:sections.all.heading.label",
      "default": "Featured collection"
    },
    {
      "type": "select",
      "id": "heading_size",
      "label": "t:sections.all.text_size.heading.label",
      "default": "h1",
      "options": [
        {
          "value": "h6",
          "label": "t:sections.all.text_size.options__h6.label"
        },
        {
          "value": "h5",
          "label": "t:sections.all.text_size.options__h5.label"
        },
        {
          "value": "h4",
          "label": "t:sections.all.text_size.options__h4.label"
        },
        {
          "value": "h3",
          "label": "t:sections.all.text_size.options__h3.label"
        },
        {
          "value": "h2",
          "label": "t:sections.all.text_size.options__h2.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.text_size.options__h1.label"
        },
        {
          "value": "hd3",
          "label": "t:sections.all.text_size.options__hd3.label"
        },
        {
          "value": "hd2",
          "label": "t:sections.all.text_size.options__hd2.label"
        },
        {
          "value": "hd1",
          "label": "t:sections.all.text_size.options__hd1.label"
        }
      ]
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "t:sections.all.subheading.label"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "t:sections.all.description.label"
    },
    {
      "type": "select",
      "id": "text_size",
      "label": "t:sections.all.text_size.description.label",
      "default": "text-base",
      "options": [
        {
          "value": "text-sm",
          "label": "t:sections.all.text_size.options__small.label"
        },
        {
          "value": "text-base",
          "label": "t:sections.all.text_size.options__base.label"
        },
        {
          "value": "text-lg",
          "label": "t:sections.all.text_size.options__large.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "show_collection_description",
      "label": "t:sections.featured-collection.settings.show_collection_description.label",
      "default": false
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "t:sections.all.collection.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.grid.name"
    },
    {
      "type": "range",
      "id": "limit",
      "label": "t:sections.all.grid.product_limit",
      "min": 2,
      "max": 12,
      "step": 1,
      "default": 8
    },
    {
      "type": "range",
      "id": "columns",
      "label": "t:sections.all.grid.columns_desktop.label",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 4
    },
    {
      "type": "select",
      "id": "column_gap",
      "options": [
        {
          "value": "none",
          "label": "t:sections.all.grid.column_gap.options__none.label"
        },
        {
          "value": "extra-small",
          "label": "t:sections.all.grid.column_gap.options__xs.label"
        },
        {
          "value": "small",
          "label": "t:sections.all.grid.column_gap.options__sm.label"
        },
        {
          "value": "medium",
          "label": "t:sections.all.grid.column_gap.options__md.label"
        },
        {
          "value": "large",
          "label": "t:sections.all.grid.column_gap.options__lg.label"
        },
        {
          "value": "extra-large",
          "label": "t:sections.all.grid.column_gap.options__xl.label"
        }
      ],
      "default": "medium",
      "label": "t:sections.all.grid.column_gap.label"
    },
    {
      "type": "select",
      "id": "row_gap",
      "options": [
        {
          "value": "inherit",
          "label": "t:sections.all.grid.row_gap.options__inherit.label"
        },
        {
          "value": "none",
          "label": "t:sections.all.grid.row_gap.options__none.label"
        },
        {
          "value": "extra-small",
          "label": "t:sections.all.grid.row_gap.options__xs.label"
        },
        {
          "value": "small",
          "label": "t:sections.all.grid.row_gap.options__sm.label"
        },
        {
          "value": "medium",
          "label": "t:sections.all.grid.row_gap.options__md.label"
        },
        {
          "value": "large",
          "label": "t:sections.all.grid.row_gap.options__lg.label"
        },
        {
          "value": "extra-large",
          "label": "t:sections.all.grid.row_gap.options__xl.label"
        }
      ],
      "default": "inherit",
      "label": "t:sections.all.grid.row_gap.label"
    },
    {
      "type": "select",
      "id": "grid_layout",
      "options": [
        {
          "value": "standard",
          "label": "t:sections.product-tabs.settings.grid_layout.options__1.label"
        },
        {
          "value": "metro",
          "label": "t:sections.product-tabs.settings.grid_layout.options__2.label"
        }
      ],
      "default": "standard",
      "label": "t:sections.product-tabs.settings.grid_layout.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.carousel.name"
    },
    {
      "type": "checkbox",
      "id": "enable_slider",
      "label": "t:sections.all.carousel.enable_carousel",
      "default": true
    },
    {
      "type": "header",
      "content": "t:sections.all.product_cards.header"
    },
    {
      "type": "select",
      "id": "pcard_image_ratio",
      "label": "t:settings_schema.global.settings.image_ratio.label",
      "default": "",
      "options": [
        {
          "value": "",
          "label": "t:settings_schema.global.settings.image_ratio.options__7.label"
        },
        {
          "value": "adapt",
          "label": "t:settings_schema.global.settings.image_ratio.options__1.label"
        },
        {
          "value": "1/1",
          "label": "t:settings_schema.global.settings.image_ratio.options__2.label"
        },
        {
          "value": "3/4",
          "label": "t:settings_schema.global.settings.image_ratio.options__3.label"
        },
        {
          "value": "4/3",
          "label": "t:settings_schema.global.settings.image_ratio.options__4.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.mobile.name"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.all.mobile.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.all.mobile.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.all.mobile.columns_mobile.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": true,
      "label": "t:sections.all.mobile.swipe_on_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.product-tabs.settings.header__view_all_btn.content"
    },
    {
      "type": "checkbox",
      "id": "show_all_button_on_top",
      "label": "t:sections.featured-collection.settings.show_all_button_on_top.label",
      "default": false
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "t:sections.featured-collection.settings.view_all_button.label",
      "info": "t:sections.featured-collection.settings.view_all_button.info"
    },
    {
      "type": "select",
      "id": "button_style",
      "label": "t:sections.all.button.button_style.label",
      "options": [
        {
          "value": "btn--primary",
          "label": "t:sections.all.button.button_style.options__1.label"
        },
        {
          "value": "btn--secondary",
          "label": "t:sections.all.button.button_style.options__2.label"
        },
        {
          "value": "btn--underline",
          "label": "t:sections.all.button.button_style.options__4.label"
        }
      ],
      "default": "btn--primary"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "t:sections.all.padding.padding_top",
      "default": 50,
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 50,
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "t:sections.all.divider.content"
    },
    {
      "type": "checkbox",
      "id": "show_section_divider",
      "default": false,
      "label": "t:sections.all.divider.settings.show_divider.label"
    },
    {
      "type": "select",
      "id": "divider_width",
      "options": [
        {
          "value": "fixed",
          "label": "t:sections.all.container.options__fixed.label"
        },
        {
          "value": "full",
          "label": "t:sections.all.container.options__full.label"
        }
      ],
      "default": "fixed",
      "label": "t:sections.all.divider.settings.divider_width.label"
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured-collection.presets.name"
    }
  ]
}
{% endschema %}
