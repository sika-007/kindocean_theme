{{ 'collection.css' | asset_url | stylesheet_tag }}
<script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'show-more.js' | asset_url }}" defer="defer"></script>
{%- liquid
  assign current_filter_size = 0
  assign columns_desktop = section.settings.columns_desktop
  assign columns_tablet = 3
  assign columns_mobile = section.settings.columns_mobile | times: 1

  for filter in collection.filters
    assign current_filter_size = current_filter_size | plus: filter.active_values.size
  endfor

  assign enable_sorting = section.settings.enable_sorting
  assign enable_filtering = section.settings.enable_filtering
  assign filter_type = section.settings.filter_type
  assign show_toolbar = false
  if enable_filtering or enable_sorting
    assign show_toolbar = true
  endif

  assign default_grid_mobile = 'f-grid-' | append: columns_mobile | append: '-cols'

  assign grid_layout = section.settings.grid_layout
  assign is_metro = false
  if grid_layout == 'metro' and columns_desktop > 2
    assign is_metro = true
    if columns_desktop == 3
      assign metro_columns = 10
    else
      assign metro_columns = columns_desktop | minus: 1 | times: 2
    endif
  endif
-%}
{%- capture image_sizes -%}
(max-width: 767px) calc((100vw - 38px) / {{ columns_mobile }}),
(max-width: 1279px) calc((100vw - 90px) / {{ columns_tablet }}),
{%- if enable_filtering -%}
  calc({{ settings.page_width}}px / {{ columns_desktop | plus: 1 }})
{%- else -%}
{{ settings.page_width | divided_by: columns_desktop }}px
{%- endif -%}
{%- endcapture -%}

{% render 'divider',
  show_divider: section.settings.show_section_divider,
  divider_width: section.settings.divider_width
%}

<div
  class="section--padding"
  style="--section-padding-top: {{ section.settings.padding_top }}px;--section-padding-bottom: {{ section.settings.padding_bottom }}px;"
>
  <div class="collection page-width">
    {%- paginate collection.products by section.settings.products_per_page -%}
      <div class="collection__content flex">
        {%- if collection.all_products_count > 0 -%}
          <div
            class="hidden{% if enable_filtering and filter_type == 'vertical' %} xl:block{% endif %}"
            id="FacetFiltersContainer"
          >
            <div class="sticky-element z-10">
              {%- render 'facets', context: 'vertical', results: collection -%}
            </div>
          </div>
        {%- endif -%}
        <div class="flex flex-col flex-grow{% if show_toolbar %} show-toolbar{% endif %}" id="ProductGridWrapper">
          <div class="sticky-element grid gap-5 z-10" style="--sticky-offset: 0px;">
            {%- if enable_filtering or enable_sorting -%}
              <div class="collection__toolbar flex items-center justify-between">
                {%- if filter_type == 'drawer' and collection.all_products_count > 0 and enable_filtering -%}
                  {%- render 'facets-drawer', results: collection, enable_sorting: enable_sorting -%}
                {%- endif -%}

                {%- if filter_type == 'vertical' and collection.all_products_count > 0 and enable_filtering -%}
                  <div class="flex xl:hidden">
                    {%- render 'facets-drawer', results: collection, enable_sorting: enable_sorting -%}
                  </div>
                {%- endif -%}

                <div class="gap-10 hidden md:flex items-center justify-between{% if filter_type == 'vertical' or enable_filtering == false %} xl:flex-grow{% endif %}">
                  {%- if collection.all_products_count > 0 -%}
                    <div data-facet-loading>
                      {%- render 'loading-spinner' -%}
                      <p id="ProductCount" class="m-0" role="status">
                        {%- liquid
                          if collection.results_count
                            echo 'products.facets.filters_selected' | t: terms: collection.terms, count: collection.results_count
                          elsif collection.products_count == collection.all_products_count
                            echo 'products.facets.product_count_simple' | t: count: collection.products_count
                          else
                            echo 'products.facets.product_count' | t: product_count: collection.products_count, count: collection.all_products_count
                          endif
                        -%}
                      </p>
                    </div>
                  {%- endif -%}
                  {%- if enable_sorting and collection.all_products_count > 0 -%}
                    <div class="flex items-center gap-3" id="SortByContainer">
                      {%- render 'facet-short',
                        results: collection,
                        icon_size: 'extra-small',
                        label_class: 'font-body-bolder'
                      -%}
                    </div>
                  {%- endif -%}
                </div>

                <layout-switcher class="flex md:hidden gap-2" style="--buttons-width: 4rem;">
                  {%- for per_row in (1..2) -%}
                    {%- assign layout = 'f-grid-' | append: per_row | append: '-cols' -%}
                    <button
                      class="btn btn--icon{% if layout == default_grid_mobile %} btn--active{% endif %}"
                      data-layout-mode="grid-{{ per_row }}"
                      aria-label="{{ 'accessibility.layout_switcher' | t: col: per_row }}"
                    >
                      {%- render 'icon-grid-column', layout: per_row, classes: 'pointer-events-none' -%}
                    </button>
                  {%- endfor -%}
                </layout-switcher>
              </div>
            {%- endif -%}
          </div>
          {%- liquid
            if enable_filtering
              render 'facets-active', results: collection
            endif
          -%}
          <div id="ProductGridContainer">
            {%- if collection.products.size == 0 -%}
              <div class="empty-state flex flex-col items-center justify-center gap-6 text-center">
                {%- if collection.all_products_count > 0 -%}
                  <div class="gap-3 flex flex-col items-center justify-center text-center">
                    {%- render 'icon-empty-state' -%}
                    <p class="h4">{{ 'collections.general.no_results' | t }}</p>
                    <p class="m-0">{{ 'collections.general.use_fewer_filters' | t }}</p>
                  </div>
                  <a class="btn btn--primary" href="{{ collection.url }}" is="facet-remove">
                    {{- 'products.facets.clear_all' | t -}}
                  </a>
                {%- else -%}
                  <div class="gap-3 flex flex-col items-center justify-center text-center">
                    {%- render 'icon-empty-state' -%}
                    <p class="h4">{{ 'collections.general.empty' | t }}</p>
                  </div>
                  <a class="btn btn--primary" href="{{ routes.all_products_collection_url }}">
                    {{ 'collections.general.continue_shopping' | t }}
                  </a>
                {%- endif -%}
              </div>
            {%- endif -%}
            <grid-list
              id="ProductsList"
              class="grid-list products-list f-grid md:f-grid-{{ columns_tablet }}-cols xl:f-grid-{{ columns_desktop }}-cols {{ default_grid_mobile }} f-grid--gap-medium"
            >
              {%- for product in collection.products -%}
                {%- liquid
                  # Detect metro item
                  assign current_image_sizes = image_sizes
                  assign is_metro_item = false
                  assign custom_class = ''
                  if is_metro
                    assign position_in_group = forloop.index0 | modulo: metro_columns

                    if columns_desktop == 3
                      assign metro_index = metro_columns | minus: 4
                    else
                      assign metro_index = metro_columns | minus: 1
                    endif

                    assign modulo_2 = position_in_group | modulo: metro_index

                    if position_in_group == 0 or modulo_2 == 0
                      assign is_metro_item = true
                      assign custom_class = ' is-metro-item'
                    endif
                  endif
                -%}
                {%- if is_metro_item -%}
                  {%- capture current_image_sizes -%}
                  (max-width: 767px) calc(100vw - 30px),
                  (max-width: 1023px) calc(((100vw - 30px) / {{ columns_tablet }}) * 2),
                  {{ settings.page_width | divided_by: columns_desktop | times: 2 }}px
                  {%- endcapture -%}
                {%- endif -%}
                <div class="f-column card {{ custom_class }}">
                  {%- render 'card-product',
                    product: product,
                    use_landscape_image: is_metro_item,
                    image_sizes: current_image_sizes,
                    section_id: section.id,
                    section_index: 2,
                    index: forloop.index
                  -%}
                </div>
              {%- endfor -%}
            </grid-list>
            {%- liquid
              if paginate.pages > 1
                render 'pagination', paginate: paginate, type: section.settings.pagination
              endif
            -%}
          </div>
        </div>
      </div>
    {%- endpaginate -%}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "collection-section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 36,
      "step": 1,
      "default": 15,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "grid_layout",
      "options": [
        {
          "value": "standard",
          "label": "t:sections.product-tabs.settings.grid_layout.options__1.label"
        },
        {
          "value": "metro",
          "label": "t:sections.product-tabs.settings.grid_layout.options__2.label"
        }
      ],
      "default": "standard",
      "label": "t:sections.product-tabs.settings.grid_layout.label"
    },
    {
      "type": "select",
      "id": "pagination",
      "label": "t:sections.main-collection-product-grid.settings.pagination.label",
      "options": [
        {
          "value": "infinite",
          "label": "t:sections.main-collection-product-grid.settings.pagination.options__1.label"
        },
        {
          "value": "load_more",
          "label": "t:sections.main-collection-product-grid.settings.pagination.options__2.label"
        },
        {
          "value": "number",
          "label": "t:sections.main-collection-product-grid.settings.pagination.options__3.label"
        }
      ],
      "default": "number"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "vertical",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "text",
      "id": "expand_filter_groups",
      "label": "t:sections.main-collection-product-grid.settings.expand_filter_groups.label",
      "placeholder": "Color, Price, Size",
      "info": "t:sections.main-collection-product-grid.settings.expand_filter_groups.info"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 50
    },
    {
      "type": "header",
      "content": "t:sections.all.divider.content"
    },
    {
      "type": "checkbox",
      "id": "show_section_divider",
      "default": false,
      "label": "t:sections.all.divider.settings.show_divider.label"
    },
    {
      "type": "select",
      "id": "divider_width",
      "options": [
        {
          "value": "fixed",
          "label": "t:sections.all.container.options__fixed.label"
        },
        {
          "value": "full",
          "label": "t:sections.all.container.options__full.label"
        }
      ],
      "default": "fixed",
      "label": "t:sections.all.divider.settings.divider_width.label"
    }
  ]
}
{% endschema %}
